package com.example.demo.controllers;

import java.sql.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.data.BookingRepository;
import com.example.demo.data.Hotel;
import com.example.demo.data.HotelRepository;
import com.example.demo.data.Room;
import com.example.demo.data.RoomRepository;

@Controller // This means that this class is a Controller
@RequestMapping(path="/search") // This means URL's start with /search (after Application path)
public class SearchController {

  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private HotelRepository hotelRepository;
  @Autowired
  private RoomRepository roomRepository;
  
  @Autowired
  private BookingRepository bookingRepository;

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Hotel> getAllUsers() {
    // This returns a JSON or XML with the users
    return hotelRepository.findAll();
  }

  @GetMapping(path="/countries")
  public @ResponseBody Iterable<String> getAllCountries() {
    // This returns a JSON or XML with the users
    return hotelRepository.findCountriesOnly();
  }

  @GetMapping(path="/cities")
  public @ResponseBody Iterable<String> getCities(@RequestParam(value = "country", required=false) String country) {

	if (country == null) {
		return hotelRepository.findCitiesOnly();
	} else {
		return hotelRepository.findCitiesByCountry(country);
	}
  }

@GetMapping(path="/available")
  public @ResponseBody Iterable<Room> getAvailableRooms(@RequestParam(value = "city", required=false) String city,
		  @RequestParam(value = "country", required = false) String country, @RequestParam(value = "from", required=false) String from,
		  @RequestParam(value = "to", required = false) String to) {
	Set<Integer> roomID = roomRepository.findAllRoomID();
	if (from != null && to != null) {
		Date fromD = Date.valueOf(from);
		Date toD = Date.valueOf(to);
		roomID = bookingRepository.findAvailableRoomID(fromD, toD);
	}
	  return roomRepository.findRoomsOrderByHotel(country, city, roomID);
  }

}
